import material_color_utilities_python as mcu

def write(file, scheme, scheme_8):
	file.write(":root{\n")
	file.write("    --primary: %s;\n" % (mcu.hexFromArgb(scheme.get_primary())))
	file.write("    --primaryContainer: %s;\n" % (mcu.hexFromArgb(scheme.get_primaryContainer())))
	file.write("    --onPrimary: %s;\n" % (mcu.hexFromArgb(scheme.get_onPrimary())))
	file.write("    --onPrimaryContainer: %s;\n" % (mcu.hexFromArgb(scheme.get_onPrimaryContainer())))
	file.write("    --inversePrimary: %s;\n" % (mcu.hexFromArgb(scheme.get_inversePrimary())))
	file.write("    --secondary: %s;\n" % (mcu.hexFromArgb(scheme.get_secondary())))
	file.write("    --secondaryContainer: %s;\n" % (mcu.hexFromArgb(scheme.get_secondaryContainer())))
	file.write("    --onSecondary: %s;\n" % (mcu.hexFromArgb(scheme.get_onSecondary())))
	file.write("    --onSecondaryContainer: %s;\n" % (mcu.hexFromArgb(scheme.get_onSecondaryContainer())))
	file.write("    --tertiary: %s;\n" % (mcu.hexFromArgb(scheme.get_tertiary())))
	file.write("    --tertiaryContainer: %s;\n" % (mcu.hexFromArgb(scheme.get_tertiaryContainer())))
	file.write("    --onTertiary: %s;\n" % (mcu.hexFromArgb(scheme.get_onTertiary())))
	file.write("    --onTertiaryContainer: %s;\n" % (mcu.hexFromArgb(scheme.get_onTertiaryContainer())))
	file.write("    --surface: %s;\n" % (mcu.hexFromArgb(scheme.get_surface())))
	file.write("    --surfaceDim: %s;\n" % (mcu.hexFromArgb(scheme.get_surfaceDim())))
	file.write("    --surfaceBright: %s;\n" % (mcu.hexFromArgb(scheme.get_surfaceBright())))
	file.write("    --surfaceContainerLowest: %s;\n" % (mcu.hexFromArgb(scheme.get_surfaceContainerLowest())))
	file.write("    --surfaceContainerLow: %s;\n" % (mcu.hexFromArgb(scheme.get_surfaceContainerLow())))
	file.write("    --surfaceContainer: %s;\n" % (mcu.hexFromArgb(scheme.get_surfaceContainer())))
	file.write("    --surfaceContainerHigh: %s;\n" % (mcu.hexFromArgb(scheme.get_surfaceContainerHigh())))
	file.write("    --surfaceContainerHighest: %s;\n" % (mcu.hexFromArgb(scheme.get_surfaceContainerHighest())))
	file.write("    --surfaceVariant: %s;\n" % (mcu.hexFromArgb(scheme.get_surfaceVariant())))
	file.write("    --onSurface: %s;\n" % (mcu.hexFromArgb(scheme.get_onSurface())))
	file.write("    --onSurfaceVariant: %s;\n" % (mcu.hexFromArgb(scheme.get_onSurfaceVariant())))
	file.write("    --inverseSurface: %s;\n" % (mcu.hexFromArgb(scheme.get_inverseSurface())))
	file.write("    --inverseOnSurface: %s;\n" % (mcu.hexFromArgb(scheme.get_inverseOnSurface())))
	file.write("    --background: %s;\n" % (mcu.hexFromArgb(scheme.get_background())))
	file.write("    --onBackground: %s;\n" % (mcu.hexFromArgb(scheme.get_onBackground())))
	file.write("    --error: %s;\n" % (mcu.hexFromArgb(scheme.get_error())))
	file.write("    --errorContainer: %s;\n" % (mcu.hexFromArgb(scheme.get_errorContainer())))
	file.write("    --onError: %s;\n" % (mcu.hexFromArgb(scheme.get_onError())))
	file.write("    --onErrorContainer: %s;\n" % (mcu.hexFromArgb(scheme.get_onErrorContainer())))
	file.write("    --outline: %s;\n" % (mcu.hexFromArgb(scheme.get_outline())))
	file.write("    --outlineVariant: %s;\n" % (mcu.hexFromArgb(scheme.get_outlineVariant())))
	file.write("    --shadow: %s;\n" % (mcu.hexFromArgb(scheme.get_shadow())))
	file.write("    --surfaceTint: %s;\n" % (mcu.hexFromArgb(scheme.get_surfaceTint())))
	file.write("    --scrim: %s;\n\n" % (mcu.hexFromArgb(scheme.get_scrim())))

	file.write("    --black: %s;\n" % (mcu.hexFromArgb(scheme_8.get_black())))
	file.write("    --red: %s;\n" % (mcu.hexFromArgb(scheme_8.get_red())))
	file.write("    --green: %s;\n" % (mcu.hexFromArgb(scheme_8.get_green())))
	file.write("    --yellow: %s;\n" % (mcu.hexFromArgb(scheme_8.get_yellow())))
	file.write("    --blue: %s;\n" % (mcu.hexFromArgb(scheme_8.get_blue())))
	file.write("    --magenta: %s;\n" % (mcu.hexFromArgb(scheme_8.get_magenta())))
	file.write("    --cyan: %s;\n" % (mcu.hexFromArgb(scheme_8.get_cyan())))
	file.write("    --white: %s;\n" % (mcu.hexFromArgb(scheme_8.get_white())))
	file.write("    --bright_black: %s;\n" % (mcu.hexFromArgb(scheme_8.get_bright_black())))
	file.write("    --bright_red: %s;\n" % (mcu.hexFromArgb(scheme_8.get_bright_red())))
	file.write("    --bright_green: %s;\n" % (mcu.hexFromArgb(scheme_8.get_bright_green())))
	file.write("    --bright_yellow: %s;\n" % (mcu.hexFromArgb(scheme_8.get_bright_yellow())))
	file.write("    --bright_blue: %s;\n" % (mcu.hexFromArgb(scheme_8.get_bright_blue())))
	file.write("    --bright_magenta: %s;\n" % (mcu.hexFromArgb(scheme_8.get_bright_magenta())))
	file.write("    --bright_cyan: %s;\n" % (mcu.hexFromArgb(scheme_8.get_bright_cyan())))
	file.write("    --bright_white: %s;\n" % (mcu.hexFromArgb(scheme_8.get_bright_white())))
	file.write("}")